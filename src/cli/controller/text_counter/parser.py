"""
Defines the argument parser to use when the task of text counting has been
selected
"""
# Libraries
import argparse


# Parser generators
def create_parser():
    """
    Creates an argument parser for the controller and returns it

    Returns:
        ArgumentParser: controller argument parser
    """
    parser = argparse.ArgumentParser(
        # prog = ''
        # usage = (generated by default)
        description="""Uses the map-reduce paradigm for counting words given one
        or more files and outputs to stdout the count of words per file""",
        epilog="<> with â™¥ by @ccebrecos and @davidlj95 at ETSE UAB, Spain",
        add_help=False
    )
    return parser


def create_parser_options(parser):
    """
    Given a parser, adds required arguments to it by the controller and returns
    the parser

    Args:
        ArgumentParser: argument parser to fill
    Returns:
        ArgumentParser: filled argument parser
    """
    # Input files
    parser.add_argument(
        "input_files",
        action="store",
        help="""specifies the input files to read text from. Those files will be
        processed one by one and the output will be separed by each file.
        If you want to join all the results producing a single result for
        the count of all files, use the merge argument""",
        type=str,
        nargs="+"
    )

    # Merge file counts
    parser.add_argument(
        "-m", "--merge",
        action="store_true",
        help="""if present, merges all the word counts from all the files
        producing a single output with the count of words for all files
        merged""",
        default=False
    )

    # Count letters
    parser.add_argument(
        "--letters",
        action="store_true",
        help="""if present, will count letters instead of words""",
        default=False
    )
    parser.add_argument(
        "--merge",
        action="store_true",
        help="""if present, will merge the count files in the same result""",
        default=False
    )
    return parser
